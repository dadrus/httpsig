name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint-code:
    name: Run Linters
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - name: Review code
        uses: reviewdog/action-golangci-lint@f9bba13753278f6a73b27a56a3ffb1bfda90ed71 # v2.8.0
        with:
          go_version: 1.22.5
          golangci_lint_version: v1.59.1
          reporter: github-pr-review
          fail_on_error: true

  check-licenses:
    name: Check Licenses
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.22.5
      - name: Get google/go-licenses package
        run: go install github.com/google/go-licenses@v1.6.0
      - name: Check the licenses
        run: |
          go-licenses check --disallowed_types=forbidden,restricted,reciprocal,permissive,unknown .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.22.5
      - name: Execute tests
        run: |
          go test -v -gcflags=all=-l -cover ./... -coverprofile coverage.out -coverpkg ./...
      - name: Upload code coverage report
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: coverage.out
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
