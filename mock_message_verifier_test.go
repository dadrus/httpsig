// Code generated by mockery v2.42.1. DO NOT EDIT.

package httpsig

import mock "github.com/stretchr/testify/mock"

// MessageVerifierMock is an autogenerated mock type for the messageVerifier type
type MessageVerifierMock struct {
	mock.Mock
}

type MessageVerifierMock_Expecter struct {
	mock *mock.Mock
}

func (_m *MessageVerifierMock) EXPECT() *MessageVerifierMock_Expecter {
	return &MessageVerifierMock_Expecter{mock: &_m.Mock}
}

// verify provides a mock function with given fields: msg
func (_m *MessageVerifierMock) verify(msg *Message) error {
	ret := _m.Called(msg)

	if len(ret) == 0 {
		panic("no return value specified for verify")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*Message) error); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MessageVerifierMock_verify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'verify'
type MessageVerifierMock_verify_Call struct {
	*mock.Call
}

// verify is a helper method to define mock.On call
//   - msg *Message
func (_e *MessageVerifierMock_Expecter) verify(msg interface{}) *MessageVerifierMock_verify_Call {
	return &MessageVerifierMock_verify_Call{Call: _e.mock.On("verify", msg)}
}

func (_c *MessageVerifierMock_verify_Call) Run(run func(msg *Message)) *MessageVerifierMock_verify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*Message))
	})
	return _c
}

func (_c *MessageVerifierMock_verify_Call) Return(_a0 error) *MessageVerifierMock_verify_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MessageVerifierMock_verify_Call) RunAndReturn(run func(*Message) error) *MessageVerifierMock_verify_Call {
	_c.Call.Return(run)
	return _c
}

// NewMessageVerifierMock creates a new instance of MessageVerifierMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMessageVerifierMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *MessageVerifierMock {
	mock := &MessageVerifierMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
